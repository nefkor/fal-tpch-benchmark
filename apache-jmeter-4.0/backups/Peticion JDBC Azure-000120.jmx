<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TPCH Azure DW" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="General Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="DATASET" elementType="Argument">
            <stringProp name="Argument.name">DATASET</stringProp>
            <stringProp name="Argument.value">gendata100-gen2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="THREADS" elementType="Argument">
            <stringProp name="Argument.name">THREADS</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ITERATIONS" elementType="Argument">
            <stringProp name="Argument.name">ITERATIONS</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMP_UP" elementType="Argument">
            <stringProp name="Argument.name">RAMP_UP</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERNAME" elementType="Argument">
            <stringProp name="Argument.name">USERNAME</stringProp>
            <stringProp name="Argument.value">admindw</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PASSWORD</stringProp>
            <stringProp name="Argument.value">Falabella123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TIME_OUT" elementType="Argument">
            <stringProp name="Argument.name">TIME_OUT</stringProp>
            <stringProp name="Argument.value">1200000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Azure DWH - TPCH10000 - Power Run - Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Azure DWH - TPCH10000 - Power Run - Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ1</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q1" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;

            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ1&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count_big(*) as count_order from lineitem where l_shipdate &lt;= DATEADD(day, -90, &apos;19981201&apos;) group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);

	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q1 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ2</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q2" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q2" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ2&quot;);
	
	Statement sqlStatement = myConnection.createStatement();

	String readRecordSQL = &quot;select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 15 and p_type like &apos;%BRASS&apos; and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = &apos;EUROPE&apos; and ps_supplycost = ( select min(ps_supplycost) from partsupp, supplier, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = &apos;EUROPE&apos; ) order by s_acctbal desc, n_name, s_name, p_partkey;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q2 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q3" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ3</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q3" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ3&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = &apos;BUILDING&apos; and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate &lt; &apos;1995-03-15&apos; and l_shipdate &gt; &apos;1995-03-15&apos; group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q3 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q4" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ4</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q4" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q4" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ4&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select o_orderpriority, count_big(*) as order_count from orders where o_orderdate &gt;= &apos;1993-07-01&apos; and o_orderdate &lt; DATEADD(month, 3, &apos;19930701&apos;) and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate &lt; l_receiptdate ) group by o_orderpriority order by o_orderpriority;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q4 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q5" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ5</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q5" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q5" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ5&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = &apos;ASIA&apos; and o_orderdate &gt;= &apos;1994-01-01&apos; and o_orderdate &lt; DATEADD(year, 1, &apos;19940101&apos;) group by n_name order by revenue desc;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0 
	log.info(&quot;Q5 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q6" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ6</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q6" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q6" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;

	int random = Math.abs(new Random().nextInt() % 200) + 1;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ6&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate &gt;= &apos;1994-01-01&apos; and l_shipdate &lt; DATEADD(year, 1, &apos;19940101&apos;) and l_discount between .06 - 0.01 and .06 + 0.01 and l_quantity &lt; &quot; + random;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q6 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q7" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ7</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q7" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q7" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ7&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select supp_nation, cust_nation, l_year, sum(volume) as revenue from ( select n1.n_name as supp_nation, n2.n_name as cust_nation, year(l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ( (n1.n_name = &apos;FRANCE&apos; and n2.n_name = &apos;GERMANY&apos;) or (n1.n_name = &apos;GERMANY&apos; and n2.n_name = &apos;FRANCE&apos;) ) and l_shipdate between &apos;19950101&apos; and &apos;19961231&apos; ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q7 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q8" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ8</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q8" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q8" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQL&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select o_year, sum(case when nation = &apos;BRAZIL&apos; then volume else 0 end) / sum(volume) as mkt_share from ( select year(o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = &apos;AMERICA&apos; and s_nationkey = n2.n_nationkey and o_orderdate between &apos;19950101&apos; and &apos;19961231&apos; and p_type = &apos;ECONOMY ANODIZED STEEL&apos; ) as all_nations group by o_year order by o_year;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q8 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q9" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQL</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q9" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q9" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQL&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, year(o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from part, supplier, lineitem, partsupp, orders, nation where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like &apos;%green%&apos; ) as profit group by nation, o_year order by nation, o_year desc;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q9 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q10" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ10</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q10" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q10" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ10&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate &gt;= &apos;1993-10-01&apos; and o_orderdate &lt; DATEADD(month, 3, &apos;19931001&apos;) and l_returnflag = &apos;R&apos; and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q10 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q11" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ11</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q11" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q11" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ11&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = &apos;GERMANY&apos; group by ps_partkey having sum(ps_supplycost * ps_availqty) &gt; ( select sum(ps_supplycost * ps_availqty) * 0.0001000000 from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = &apos;GERMANY&apos; ) order by value desc;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	//myResultSet.next()
	//int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	//assert resultSetSize &gt; 0
	log.info(&quot;Q11 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Q12" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">${TIME_OUT}</stringProp>
          <stringProp name="dataSource">AzureSQLQ12</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://${DATASET}.database.windows.net:1433;database=${DATASET};user=admindw@${DATASET};password= {your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">Falabella123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">${USERNAME}</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC Q12" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Q12" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.sql.*; 
import java.sql.Connection;
import org.apache.jmeter.protocol.jdbc.config.DataSourceElement;
            
	Connection myConnection = DataSourceElement.getConnection(&quot;AzureSQLQ12&quot;);
	
	Statement sqlStatement = myConnection.createStatement();
	//sqlStatement.setMaxRows(10000);
	String readRecordSQL = &quot;select l_shipmode, sum(case when o_orderpriority = &apos;1-URGENT&apos; or o_orderpriority = &apos;2-HIGH&apos; then 1 else 0 end) as high_line_count, sum(case when o_orderpriority &lt;&gt; &apos;1-URGENT&apos; and o_orderpriority &lt;&gt; &apos;2-HIGH&apos; then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in (&apos;MAIL&apos;, &apos;SHIP&apos;) and l_commitdate &lt; l_receiptdate and l_shipdate &lt; l_commitdate and l_receiptdate &gt;= &apos;1994-01-01&apos; and l_receiptdate &lt; DATEADD(year, 1, &apos;19940101&apos;) group by l_shipmode order by l_shipmode;&quot;;  
	ResultSet myResultSet = sqlStatement.executeQuery(readRecordSQL);
	myResultSet.next()
	int resultSetSize = myResultSet.getRow();
	
	myResultSet.close();
	myConnection.close();
	
	assert resultSetSize &gt; 0
	log.info(&quot;Q12 OK&quot;);
          </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC FREEPROCCACHE WITH NO_INFOMSGS</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="true">
              <stringProp name="dataSource">AzureSQL</stringProp>
              <stringProp name="query">DBCC DROPCLEANBUFFERS WITH NO_INFOMSGS;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
